{"version":3,"sources":["components/Header.tsx","context/AppReducer.tsx","context/GlobalContext.tsx","components/Balance.jsx","components/incomeExp.tsx","components/transaction.tsx","components/TransactionList.tsx","components/AddTransaction.tsx","firebase.js","App.tsx","index.tsx","serviceWorker.ts"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","balance","useContext","map","amount","reduce","acc","val","toFixed","console","log","IncomeExp","amounts","income","n","exp","x","className","Transaction","sign","text","Math","abs","onClick","TransactionList","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","messaging","requestPermission","then","getToken","token","ReactDOM","render","StrictMode","document","getElementById","swDev","process","navigator","serviceWorker","register","result"],"mappings":"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","file":"static/js/main.113239e5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <h2>\r\n            Expanse Tracker\r\n        </h2>\r\n    )\r\n}\r\n","export default (state:IState, action:IAction):IState=>{   \r\n    switch(action.type){\r\n        case 'DELETE_TRANSACTION':\r\n            return{\r\n                ...state,\r\n                transactions:state.transactions.filter\r\n                (transaction=>transaction.id!==\r\n                    action.payload)\r\n            }\r\n        case 'ADD_TRANSACTION':\r\n            return{\r\n                ...state,\r\n                transactions:[action.payload, ...state.transactions]\r\n            }\r\n        default:\r\n        return state; \r\n    }\r\n}\r\n","import { type } from 'os';\r\nimport React,{createContext, useReducer} from 'react';\r\nimport AppReducer from './AppReducer'\r\n//Initial State\r\nconst initialState:IState = {\r\n    transactions:[\r\n        \r\n    ]\r\n}\r\n//Create context\r\nexport const GlobalContext = createContext <IState | any>(initialState)\r\n//provider component\r\nexport const GlobalProvider =({children}:any)=>{\r\n    const [state, dispatch] = useReducer(AppReducer,initialState)\r\n    function deleteTransaction(id:number){\r\n        dispatch({\r\n            type:'DELETE_TRANSACTION',\r\n            payload:id\r\n        })\r\n    }\r\n    //Add Transaction\r\n    function addTransaction(transaction:IState){\r\n        dispatch({\r\n            type:'ADD_TRANSACTION',\r\n            payload: transaction\r\n        })\r\n    }\r\n    return (\r\n        <GlobalContext.Provider value={\r\n            {transactions:state.transactions,\r\n            deleteTransaction ,\r\n            addTransaction  \r\n            }}>\r\n                {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n","import React, {useContext}from 'react'\r\nimport {GlobalContext} from '../context/GlobalContext'\r\n\r\nexport const Balance = () => {\r\n    const {transactions}= useContext(GlobalContext)\r\n    const amount= transactions.map(transaction =>transaction.amount)\r\n    const balance = amount.reduce((acc,val)=>(acc+=val), 0).toFixed(2);\r\n    console.log (balance) \r\n    return (\r\n       <>\r\n        <h4> Your Balance</h4>\r\n        <h1 >${balance}</h1>\r\n       </>\r\n    )\r\n}\r\n\r\n\r\n ","import React, { useContext } from 'react'\r\nimport {GlobalContext} from '../context/GlobalContext'\r\n\r\nexport const IncomeExp = () => {\r\n    const {transactions}:IState = useContext(GlobalContext)\r\n    const amounts = transactions.map(transaction =>transaction.amount )\r\n    const income = amounts.filter(n =>n>0).reduce((acc,val)=>acc+=val,0).toFixed(2);\r\n    const exp = +amounts.filter(x =>x<0).reduce((acc,val)=>acc+=val,0)\r\n                .toFixed(2)*-1\r\n    console.log(exp)\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p className=\"money plus\">${income}</p>\r\n            </div>\r\n            <div>\r\n                <h4 > Expanse</h4>\r\n                <p className=\"money minus\">${exp}</p>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React,{useContext} from 'react'\r\nimport {GlobalContext} from '../context/GlobalContext'\r\n\r\ntype prop={\r\n    transaction:ITrans\r\n}\r\nexport const Transaction = ({transaction}:prop) => {\r\n    const sign= transaction.amount < 0 ? '-':'+';\r\n    const {deleteTransaction} = useContext(GlobalContext)\r\n    \r\n    return (\r\n                \r\n    <li className={transaction.amount<0 ? 'minus':\"plus\"}>\r\n        {transaction.text}<span>{sign}${Math.abs(transaction.amount)}</span>\r\n    <button  onClick={()=>deleteTransaction(transaction.id)}\r\n        className=\"delete-btn\">x</button>\r\n    </li>\r\n        \r\n    )}\r\n\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalContext'\r\nimport {Transaction} from './transaction'\r\n\r\nexport const TransactionList = () => {\r\n    const {transactions}:IState= useContext(GlobalContext)\r\n    \r\n    return (\r\n        <>\r\n          <h3>History</h3>\r\n          <ul className=\"list\" >\r\n              {transactions.map(transaction=>(\r\n               <Transaction key={transaction.id} transaction={transaction}/>\r\n              ))}\r\n            \r\n          </ul> \r\n        </>\r\n    )\r\n}\r\n","import React,{useState,useContext, ChangeEvent} from 'react'\r\nimport {GlobalContext} from '../context/GlobalContext'\r\n\r\n\r\nexport const AddTransaction = () => {\r\n\r\n    const [text,setText]=useState('');\r\n    const [amount, setAmount]=useState(\"0\");\r\n    const {addTransaction}= useContext(GlobalContext)\r\n    const onSubmit = (e:React.FormEvent<HTMLFormElement>) =>{\r\n      e.preventDefault();\r\n      const newTransaction ={\r\n        id: Math.floor(Math.random()*10000),\r\n        text,\r\n        amount:+amount\r\n      }\r\n      addTransaction(newTransaction)\r\n    }\r\n    return (\r\n        <>\r\n        <h3>Add new transaction</h3>\r\n        <form onSubmit={onSubmit}>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"text\">Text</label>\r\n            <input type=\"text\" value={text} \r\n            onChange={(e)=>setText(e.target.value)} \r\n            \r\n            placeholder=\"Enter text...\" />\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"amount\"\r\n              >Amount <br />\r\n              (negative - expense, positive - income)</label\r\n            >\r\n            <input type=\"text\" value={amount} onChange={(e:ChangeEvent<HTMLInputElement>)=>\r\n              setAmount( e.target.value)} placeholder=\"Enter amount...\" />\r\n          </div>\r\n          <button className=\"btn\">Add transaction</button>\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n","import firebase from \"firebase\"\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBUuHPO03wugF24-7ujjOzphr9kopOsWRQ\",\r\n    authDomain: \"expansetrackerpwa.firebaseapp.com\",\r\n    databaseURL: \"https://expansetrackerpwa.firebaseio.com\",\r\n    projectId: \"expansetrackerpwa\",\r\n    storageBucket: \"expansetrackerpwa.appspot.com\",\r\n    messagingSenderId: \"669116355699\",\r\n    appId: \"1:669116355699:web:564e8beafe8c8925024606\",\r\n    measurementId: \"G-M9QBND4Q5V\"\r\n  };\r\n  firebase.initializeApp(firebaseConfig);\r\n  export default firebase;\r\n  ","import React from 'react';\r\nimport './App.css';\r\nimport {Header} from './components/Header'\r\nimport {Balance} from './components/Balance'\r\nimport {IncomeExp} from './components/incomeExp'\r\nimport {TransactionList} from './components/TransactionList'\r\nimport {AddTransaction} from './components/AddTransaction'\r\nimport {GlobalProvider} from './context/GlobalContext'\r\nimport firebase from './firebase'\r\n\r\nfunction App() {\r\nconst messaging = firebase.messaging()\r\nmessaging.requestPermission().then(()=>{\r\n  return messaging.getToken()\r\n}).then((token:any)=>{\r\n  console.log(\"token\", token)\r\n})\r\n  return (\r\n    <div>\r\n      <GlobalProvider>\r\n        <Header/>\r\n          <div className=\"container\">\r\n            <Balance />\r\n            <IncomeExp/>\r\n            <TransactionList />\r\n            <AddTransaction />\r\n          </div>\r\n      </GlobalProvider>\r\n      Created By Mahmood Ahmed <br/>\r\n      Roll No\tPIAIC162544<br/>\r\n    \tBatch 35\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root') \n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.swDev();\n","export  function swDev(){\r\n    let swDev= `${process.env.PUBLIC_URL}/sw.js`\r\n    navigator.serviceWorker.register(swDev).then((result)=>{\r\n        console.log(\"result\",result)\r\n    })\r\n}"],"sourceRoot":""}